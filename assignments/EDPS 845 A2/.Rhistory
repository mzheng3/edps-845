d1 <- rnorm(10, 5, 1)
d1
dim(d1)
dim(d1) <- (5, 2)
dim(d1) <- c(5, 2)
dim(d1)
dim(d1) <- c(5, 2)
d1
b <- array(1:12, c(2, 3, 2))
b
is.matrix(d1)
is.array(d1)
x1 <- array(1:5, c(1, 1, 5))
x1
x2 <- array(1:5, c(1, 5, 1))
x2
x3 <- array(1:5, c(5, 1, 1))
x3
x4 <- 1:5
dim(x4)
dim(x1)
attributes(data.frame(1))
$names
names
row.names
class
dataframe <- data.frame(e1 = rnorm (6, 1, 0.5), e2 = c("A", "B", "C", "D", "E", "F" ))
str(dataframe)
dataframe <- data.frame(e1 = rnorm (6, 1, 0.5), e2 = c("A", "B", "C", "D", "E", "F" ))
dataframe
str(dataframe)
dataframe1 <- data.frame(e1 = rnorm (6, 1, 0.5), e2 = c("A", "B", "C", "D", "E", "F" ))
dataframe1
str(dataframe1)
attributes(data.frame(dataframe1))
as.matrix(data.frame(a = 1, b = 'char'))
a   b
[1,] "1" "char"
as.matrix(data.frame(a = 1, b = 'char'))
as.matrix(data.frame(e1 = rnorm (6, 1, 0.5), e2 = c("A", "B", "C", "D", "E", "F" )))
Score = rnorm (6, 90, 10)
Score
Score = rnorm (6, 80, 10)
Score
Score = rnorm (6, 80, 5)
Score
Score = rnorm (6, 85, 5)
Score
Score = rnorm (6, 85, 8)
Score
as.matrix(data.frame(Score = rnorm (6, 85, 8), e2 = c("B", "B+", "A-", "B", "A+", "B-" ), e3 = c("Male", "Female", "Female", "Male", "Felame", "Male")))
as.matrix(data.frame(Score = rnorm (6, 85L, 8L), e2 = c("B", "B+", "A-", "B", "A+", "B-" ), e3 = c("Male", "Female", "Female", "Male", "Felame", "Male")))
as.matrix(data.frame(Score = rnorm (6L, 85L, 8L), e2 = c("B", "B+", "A-", "B", "A+", "B-" ), e3 = c("Male", "Female", "Female", "Male", "Felame", "Male")))
as.matrix(data.frame(Score = rnorm (6, 85, 8), e2 = c("B", "B+", "A-", "B", "A+", "B-" ), e3 = c("Male", "Female", "Female", "Male", "Felame", "Male")))
Score = rnorm (6, 85, 8)
Score
as.matrix(data.frame(Score = rnorm (6, 85, 8), ID = c("A", "B", "C", "D", "E", "F" ), Gender = c("Male", "Female", "Female", "Male", "Felame", "Male")))
g1 <- data.frame()
g1
class(g1)
dim(df)
g2 <- data.frame(1, seq(10))[FALSE, ]
dim(g2)
g2
g2 <- data.frame(2, seq(5))[FALSE, ]
dim(g2)
g3 <- data.frame(2, seq(5))[, FALSE]
dim(g3)
g2 <- data.frame(2, seq(5))[FALSE, ]
dim(g2)
g3 <- data.frame(2, seq(5))[, FALSE]
dim(g3)
mtcars[mtcars$cyl = 4, ]
mtcars[-1:4, ]
mtcars[mtcars$cyl <= 5]
mtcars[mtcars$cyl <= 5]
mtcars[mtcars$cyl == 4 | 6, ]
mtcars[mtcars$cyl == 4 | mtcars$cyl == 6, ]
mtcars[mtcars$cyl == 4 | mtcars$cyl == 6, ]
mtcars[mtcars$cyl == 4 | 6, ]
h1 <- 1:5; h1[NA]
h2[c(1,NA)]
h1[c(1,NA)]
h2[NA]
h1[NA]
h1[NA_real_]
x <- outer(1:5, 1:5, FUN = "*")
x
x[upper.tri(x)]
x <- outer(1:5, 1:5, FUN = "*")
x
x[upper.tri(x)]
upper.tri(x)
upper.tri(x)
x[upper.tri(x)]
mtcars[1:20]
mtcars[1:20,]
x5 <- list (1:10, "A", "B", "c")
x5
dim(dataframe1)
is.matrix(dataframe1)
as.matrix(data.frame(Score = rnorm (6, 85, 8), ID = c("A", "B", "C", "D", "E", "F" ), Gender = c("Male", "Female", "Female", "Male", "Felame", "Male")))
h1 <- as.matrix(data.frame(Score = rnorm (6, 85, 8), ID = c("A", "B", "C", "D", "E", "F" ), Gender = c("Male", "Female", "Female", "Male", "Felame", "Male")))
h1
diagonal <- function(h1) {
v <- c()
for (i in 1:min(dim(h1))) {
v <- c(v, h1[i,i])
}
v
}
diagonal
h1 <- matrix(seq(18), nrow = 6)
h1
h1 <- matrix(seq(21), nrow = 6)
diag(h1)
diag(t(h1))
diagonal1 <- function(h1) {
v <- c()
for (i in 1:min(dim(h1))) {
v <- c(v, h1[i,i])
}
v
}
h1 <- matrix(seq(18), nrow = 6)
diag(h1)
h1 <- as.matrix(data.frame(Score = rnorm (6, 85, 8), ID = c("A", "B", "C", "D", "E", "F" ), Gender = c("Male", "Female", "Female", "Male", "Felame", "Male")))
h1
diagonal1 <- function(h1) {
v <- c()
for (i in 1:min(dim(h1))) {
v <- c(v, h1[i,i])
}
v
}
h1 <- matrix(seq(18), nrow = 6)
h1
diagonal1(h1)
diagonal1(t(h1))
h2 <- as.matrix(data.frame(Score = rnorm (4, 85, 8), ID = c("A", "B", "C", "D" ), Gender = c("Male", "Female", "Female", "Male", Age = c("22", "24", "19", "26"))))
h2
h2 <- as.matrix(data.frame(Score = rnorm (4, 85, 8), ID = c("A", "B", "C", "D" ), Gender = c("Male", "Female", "Female", "Male", Age = c("22", "24", "19", "26"))))
h2
h2 <- as.matrix(data.frame(Score = rnorm (4, 85, 8), ID = c("A", "B", "C", "D" ), Gender = c("Male", "Female", "Female", "Male"), Age = c("22", "24", "19", "26"))))
h2 <- as.matrix(data.frame(Score = rnorm (4, 85, 8), ID = c("A", "B", "C", "D" ), Gender = c("Male", "Female", "Female", "Male"), Age = c("22", "24", "19", "26")))))
h2 <- as.matrix(data.frame(Score = rnorm (4, 85, 8), ID = c("A", "B", "C", "D" ), Gender = c("Male", "Female", "Female", "Male"), Age = c("22", "24", "19", "26")))
h2
diagonal2 <- function(h2) h2[matrix(seq_len(nrow(h2)), nrow = nrow(h2), ncol = 4)]
diagonal2
diagonal2 <- function(h2) {h2[matrix(seq_len(nrow(h2)), nrow = nrow(h2), ncol = 4)]}
y <- matrix(seq(9), nrow = 3)
y
h3 <- matrix(seq(4), nrow = 2)
h3
diagonal1(h2)
h3 <- matrix(seq(4), nrow = 2)
h3
diagonal1(h2)
diagonal1(h1)
diagonal1 <- function(h1) {
v <- c()
for (i in h1:min(dim(h1))) {
v <- c(v, h1[i,i])
}
v
}
diagonal1
h1 <- matrix(seq(18), nrow = 6)
h1
h2 <- matrix(seq(18), nrow = 6)
h2
diagonal1(h1)
diagonal1 <- function(h1) {
v <- c()
for (i in h1:min(dim(h1))) {
v <- c(v, h1[i,j])
}
v
}
diagonal1(h1)
diagonal1 <- function(h1) {
v <- c()
for (i in h1:min(dim(h1))) {
v <- c(v, h1[i,i])
}
v
}
h1 <- matrix(seq(18), nrow = 6)
h1
diagonal1(h1)
diagonal1 <- function(h1) {
v <- c()
for (i in 1:min(dim(h1))) {
v <- c(v, h1[i,i])
}
v
}
h1 <- matrix(seq(18), nrow = 6)
h1
diagonal1(h1)
diagonal1(t(h1))
diagonal2 <- function(h2) {h2[matrix(seq_len(nrow(h2)), nrow = nrow(h2), ncol = 4)]}
h2 <- matrix(seq(4), nrow = 2)
h2
diagonal1(h2)
diagonal2(h2)
h2 <- matrix(seq(4), nrow = 4)
h2
h2 <- matrix(seq(4), nrow = 2)
h2
diagonal2(h2)
diagonal2(h1)
diagonal1(t(h2))
diagonal2(t(h2))
diagonal2(t(h2))
diagonal1(t(h2))
m1 <- c(1,3,5,NA,9, NA, 13)
m1
m1[is.na(m1)] <- 0
m1
mod <- lm(mpg ~ wt, data = mtcars)
mod
mod_sum <- summary(mod)
mod_sum
mod_sum$df[2]
mod$df.residual
mod$df.residual
mod_sum$r.squared
df1 <- data.frame(matrix(1:20,nrow=5))
df1
df1[sample(nrow(df1)),]
df1[sample(nrow(df1)),sample(ncol(df1))]
df2 <- data.frame(matrix(1:30,nrow=6))
df2
m = 4
m
select <- sample(nrow(df2),m)
df[select,]
select <- sample(nrow(df2),m)
df[select,]
m = 5
select <- sample(nrow(df2),m)
df[select,]
df2 <- data.frame(matrix(1:30,nrow=6))
df2
select <- sample(nrow(df2),m)
df2[select,]
m = 3
select <- sample(nrow(df2),m)
df2[select,]
m = 4
select <- sample(nrow(df2),m)
df2[select,]
first <- sample(nrow(df2)-m+1,1)
last <- first+m-1
select <- first:last
df2[select,]
df3 <- data.frame(g = 1, z = 1, d = 1, b = 1, r=1, p=1)
df3
df3 <- data.frame(g = 1, z = 4, d = 2, b = 8, r=3, p=9)
df3
df3 <- data.frame(g = 1, z = 0, d = 0, b = 1, r=1, p=0)
df3
names(df3) <- sort(names(df3))
df3
df4 <- data.frame(x = seq(12), y = sample(letters[seq(12)]))
df4
df4$y
sort(df$y)
sort(df4$y)
order(df4$y)
df4[order(df4$y),]
x1 <- 10
f1 <- function(x1) {
function() {
x1 + 10
}
}
is.function(f1)
is.primitive(f1)
objs <- mget(ls("package:base"), inherits = TRUE)
objs
funs <- Filter(is.function, objs)
funs
x2 <- 15
which.max(lapply(funs, function(x2) length(formals(x2))))
length(formals(scan))
funs[lapply(funs, function(x2) length(formals(x2)))==0]
a.primitive.function = funs[[1]]
a.primitive.function
formals(a.primitive.function)
funs[lapply(funs, function(x2) length(formals(x2)))==0]
x3 <- funs[lapply(funs, function(x2) length(formals(x2)))==0]
x3
length (x3)
primitive.funs <- Filter(is.primitive, objs)
primitive.funs
length(primitive.funs)
x3 <- 18
f <- function(x3) x3^2
f
formals(f)
body(f)
environment(f)
sum
formals(sum)
body(sum)
environment(sum)
c <- 10
c
c(c = c)
j <- function(x) {
y <- 2
function() {
c(x, y)
}
}
k <- j(1)
k()
rm(j, k)
x<- 5
j <- function(x) {
y <- 2
function() {
c(x, y)
}
}
k <- j(1)
k()
rm(j, k)
rm <-rm(j, k)
x <- 1
h <- function() {
y <- 2
i <- function() {
z <- 3
c(x, y, z)
}
i()
}
h()
rm(x, h)
l <- function(x) x + 1
m <- function() {
l <- function(x) x * 2
l(10)
}
m()
#> [1] 20
rm(l, m)
n <- function(x) x / 2
o <- function() {
n <- 10
n(n)
}
o()
#> [1] 5
rm(n, o)
j <- function() {
if (!exists("a")) {
a <- 1
} else {
a <- a + 1
}
print(a)
}
j()
rm(j)
x <- 20:25
f()
f <- function() x
x <- 15:25
f()
f <- function(x) {
f <- function(x) {
f <- function(x) {
x ^ 2
}
f(x) + 1
}
f(x) * 2
}
f(10)
x <- sample(replace = TRUE, 20, x = c(1:10, NA))
x
x <- sample(x = c(1:10, NA), size = 20, replace = TRUE)
x
y <- runif(min = 0, max = 1, 20)
y
y <- runif(20,0,1)
y
cor(m = "k", y = y, u = "p", x = x)
cor(x, y, use = "pairwise.complete.obs", method = "kendall")
f1 <- function(x = {y <- 1; 2}, y = 0) {
x + y
}
f1()
f2 <- function(x = z) {
z <- 100
x
}
f2()
objs <- mget(ls("package:base"), inherits = TRUE)
funs <- Filter(is.function, objs)
last.two.chars <- function(x) {
substr(x,nchar(x)-1,nchar(x))
}
base.function.names <- names(funs)
base.function.names.last2 <- sapply(base.function.names, last.two.chars)
base.function.names[base.function.names.last2=="<-"]
`%+%` <- function(a, b) paste0(a, b)
"new" %+% " string"
`% %` <- function(a, b) paste(a, b)
`%'%` <- function(a, b) paste(a, b)
`%/\\%` <- function(a, b) paste(a, b)
`% %`
`%'%` <- function(a, b) paste(a, b)
`%'%`
"a" % % "b"
"a" %' % "b"
`%'%` <- function(a, b) paste(a, b)
"a" %'% "b"
"a" %/\% "b"
TRUE %xor% TRUE
`%xor%` <- function(a,b) (a | b) & !(a&b)
TRUE %xor% TRUE
`%^%` <- function(a,b) {
unique(a[is.element(a,b)])
}
c(1,1,2,2,3,4, 5, 5, 6, 7, 8) %^% c(4,5, 6, 7)
`%+%` <- function(a,b) {
unique(c(a,b))
c(1,1,2,2,3,4, 5, 5, 6, 7, 8) %^% c(4,5, 6, 7)
`%+%` <- function(a,b) {
unique(c(a,b))
}
}
c(1,1,2,2,3,4, 5, 5, 6, 7, 8) %^% c(4,5, 6, 7)
`%+%` <- function(a,b) {
unique(c(a,b))
}
c(1,1,2,2,3,4, 5, 5, 6, 7, 8) %^% c(4,5, 6, 7)
c(1,1,2,2,3,4, 5, 5, 6, 7, 8) %+% c(4,5, 6, 7)
`%-%` <- function(a,b) {
unique(a[!is.element(a,b)])
}
c(1,1,2,2,3,4, 5, 5, 6, 7, 8) %-% c(4,5, 6, 7)
`change.random<-` <- function(v,value) {
v[sample(length(v),1)] <- value
v
}
v <- 22:45
change.random(v) <- -1
v
source()
in_dir <- function(dir, code) {
old <- setwd(dir)
on.exit(setwd(old))
force(code)
}
getwd()
source("C:/Users/Zheng/Documents")
setwd("C:/Users/Zheng/Desktop/Summer 2016/EDPS 845 R/edps-845/assignments")
source("C:/Users/Zheng/Desktop/Summer 2016/EDPS 845 R/edps-845/assignments")
help(source)
A1 <- read.table("C:/Users/Zheng/Desktop/Summer 2016/EDPS 845 R/edps-845/assignments/A1.Rmd", header=TRUE, quote="\"")
View(A1)
help(source)
sourceDir <- function(path, trace = TRUE, ...) {
for (nm in list.files(path, pattern = "[.][RrSsQq]$")) {
if(trace) cat(nm,":")
source(file.path(path, nm), ...)
if(trace) cat("\n")
}
}
source()
fn <- function() {
tmp <- getOption(thing)
options(thing = 'this_val')
do_stuff()
on.exit(options(thing = tmp))
}
fn
plot.pdf <- function(path, code) {
pdf(path)
on.exit(dev.off())
force(code)
}
plot.pdf
plot.pdf("~/Desktop/plot1.pdf",{x <- seq(0,100); plot(x,x^2)})
{xplot <- seq(0,50); plot(xplot,xplot^2)}
plot.pdf("~/Desktop/plot2.pdf",{})
xplot1 <- seq(0,50)
xplot1 <- seq(0,50)
plot(xplot1,xplot1^2)
plot.pdf("~/Desktop/plot1.pdf",{xplot1 <- seq(0,50); plot(xplot1,xplot^2)})
plot.pdf({xplot1 <- seq(0,50); plot(xplot1,xplot^2)})
plot.pdf("~/Desktop/plot1.pdf",{xplot1 <- seq(0,50); plot(xplot1,xplot1^2)})
plot.pdf("~/Desktop/plot2.pdf",{})
plot.pdf("C:\Users\Zheng\Desktop\Summer 2016\EDPS 845 R\edps-845\assignments\plot2.pdf",{})
plot.pdf("C:\Users\Zheng\Desktop\Summer 2016\EDPS 845 R\edps-845\assignments\plot1.pdf",{xplot1 <- seq(0,50); plot(xplot1,xplot1^2)})
plot.pdf("C:\Users\Zheng\Desktop\Summer 2016\EDPS 845 R\edps-845\assignments\plot1.pdf",{xplot1 <- seq(0,50); plot(xplot1,xplot1^2)})
plot.pdf("\Users\Zheng\Desktop\Summer 2016\EDPS 845 R\edps-845\assignments\plot1.pdf",{xplot1 <- seq(0,50); plot(xplot1,xplot1^2)})
capture.output2 <- function(code) {
temp <- tempfile()
on.exit(file.remove(temp), add = TRUE)
sink(temp)
on.exit(sink(), add = TRUE)
force(code)
readLines(temp)
}
capture.output2(cat("a", "b", "c", sep = "\n"))
